#!/usr/bin/perl

# emit a captioned photo panel for a photo generated by genpho
# image is fixed at top, 38 character caption below
#
# (C)2023 cameron kaiser. all rights reserved. bsd license.
#
# known bugs:
# - could get more text on the line
# - doesn't handle accented characters/high bit ISO-8859-1 or Unicode
# - doesn't handle embedded CR or LF
# - doesn't handle photos other than genpho 231x148 images

$photo = shift @ARGV;
$caption = shift @ARGV;

die("usage: $0 photo 'caption string'\n")
	if (!length($photo) || !length($caption));

die("caption limited to 38 characters\n") if (length($caption) > 38);

if (!open(X, "$photo")) {
	warn("photo $photo not readable, trying anyway\n");
} else {
	read(X, $buf, 10);
	close(X);
	warn("$photo doesn't look like a genpho 231x148 image, using anyway\n")
		if (unpack("H*", $buf) ne "00a0c41014a708ee00ff");
}

$photo =~ s#^.*/([^/]+)$#\1#;
$photo =~ s#^ph\.##;
$photo =~ s#\.prg$##;
die("photo filename may only be numbers and lower case\n")
	if ($photo =~ /[^a-z0-9]/);
die("photo filename must be less than 8 characters\n")
	if (length($photo) > 8);

$photo = uc($photo);
warn("photo filename canonicalized to $photo\n");

# standard header: sans serif fonts, single image, 2px from top, 231x148 photo
@bytes=map { hex } qw(00 a0 1d 00 01 01 42 69 01 00 02 95 08 ee);
push(@bytes, map { ord } split("", $photo));
push(@bytes, 0) while (scalar(@bytes) < 22);
push(@bytes, map { ord } split("", $caption));
push(@bytes, 127);
$bytes[2] = length($caption) + 1;

print STDOUT pack("C*", @bytes);

